name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Test & Lint
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: yessales_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        working-directory: frontend

      - name: Cache Build
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            frontend/dist
          key: build-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}-${{ hashFiles('frontend/src/**/*.{js,jsx,ts,tsx,vue}') }}
          restore-keys: |
            build-${{ runner.os }}-${{ hashFiles('frontend/package-lock.json') }}-

      - name: Run ESLint
        run: npm run lint
        working-directory: frontend

      - name: Run TypeScript check
        run: npm run type-check
        working-directory: frontend

      - name: Run tests (if available)
        run: npm run test || echo "No tests configured"
        working-directory: frontend
        env:
          NODE_ENV: test

      - name: Build application
        run: npm run build
        working-directory: frontend
        env:
          NODE_ENV: production

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        working-directory: frontend

      - name: Run npm audit
        run: npm audit --audit-level moderate || true
        working-directory: frontend

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD

  e2e:
    name: E2E Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci --legacy-peer-deps
        working-directory: frontend

      - name: Build application
        run: npm run build
        working-directory: frontend
        env:
          NODE_ENV: test

      - name: Echo E2E placeholder
        run: echo "E2E tests would run here when implemented"