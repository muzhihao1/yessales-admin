# 耶氏台球报价系统备份计划
# 
# 使用方法：
# 1. 编辑 crontab: crontab -e
# 2. 添加以下内容到 crontab
# 3. 确保脚本有执行权限: chmod +x /path/to/scripts/*.sh
#
# 时间格式: 分 时 日 月 星期 命令
# 
# 示例:
# * * * * *  每分钟执行
# 0 * * * *  每小时执行
# 0 0 * * *  每天午夜执行
# 0 0 * * 0  每周日午夜执行
# 0 0 1 * *  每月1日午夜执行

# 设置环境变量
SHELL=/bin/bash
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

# 备份脚本路径（根据实际路径修改）
BACKUP_SCRIPTS=/home/yessales/backend/scripts/backup
BACKUP_DIR=/backup/postgres
BACKUP_LOG=/backup/postgres/logs/cron.log

# ============================================
# 每日任务
# ============================================

# 每日凌晨 3:00 执行增量备份
0 3 * * * cd $BACKUP_SCRIPTS && ./daily-backup.sh >> $BACKUP_LOG 2>&1

# 每日早上 6:00 验证昨日备份
0 6 * * * cd $BACKUP_SCRIPTS && ./verify-backup.sh >> $BACKUP_LOG 2>&1

# 每日中午 12:00 检查备份存储空间
0 12 * * * df -h $BACKUP_DIR | tail -1 | awk '{if ($5 > 80) print "WARNING: Backup storage usage is " $5}' >> $BACKUP_LOG

# ============================================
# 每周任务
# ============================================

# 每周日凌晨 2:00 执行全量备份
0 2 * * 0 cd $BACKUP_SCRIPTS && ./weekly-backup.sh >> $BACKUP_LOG 2>&1

# 每周三凌晨 4:00 执行中期增量备份
0 4 * * 3 cd $BACKUP_SCRIPTS && ./daily-backup.sh >> $BACKUP_LOG 2>&1

# 每周五下午 6:00 生成备份报告
0 18 * * 5 cd $BACKUP_SCRIPTS && ./generate-backup-report.sh >> $BACKUP_LOG 2>&1

# ============================================
# 每月任务
# ============================================

# 每月1日凌晨 1:00 创建月度归档
0 1 1 * * cd $BACKUP_SCRIPTS && ./monthly-archive.sh >> $BACKUP_LOG 2>&1

# 每月15日凌晨 5:00 清理过期备份
0 5 15 * * find $BACKUP_DIR/daily -name "*.gz" -mtime +30 -delete >> $BACKUP_LOG 2>&1

# 每月最后一天晚上 10:00 备份审计
0 22 28-31 * * [ $(date +\%d -d tomorrow) = 01 ] && cd $BACKUP_SCRIPTS && ./backup-audit.sh >> $BACKUP_LOG 2>&1

# ============================================
# 实时监控任务
# ============================================

# 每5分钟检查备份进程状态
*/5 * * * * pgrep -f "backup.sh" || echo "$(date): No backup process running" >> $BACKUP_LOG

# 每小时检查最新备份时间
0 * * * * find $BACKUP_DIR -name "*.gz" -mmin -60 | wc -l | awk '{if ($1 == 0) print "WARNING: No new backups in last hour"}' >> $BACKUP_LOG

# ============================================
# 性能优化任务
# ============================================

# 每天凌晨 4:00 更新数据库统计信息
0 4 * * * PGPASSWORD=$POSTGRES_PASSWORD psql -h $POSTGRES_HOST -U $POSTGRES_USER -d $POSTGRES_DB -c "ANALYZE;" >> $BACKUP_LOG 2>&1

# 每周一凌晨 4:30 重建索引
30 4 * * 1 PGPASSWORD=$POSTGRES_PASSWORD psql -h $POSTGRES_HOST -U $POSTGRES_USER -d $POSTGRES_DB -c "REINDEX DATABASE $POSTGRES_DB;" >> $BACKUP_LOG 2>&1

# ============================================
# 故障转移和告警
# ============================================

# 每10分钟检查数据库连接
*/10 * * * * PGPASSWORD=$POSTGRES_PASSWORD psql -h $POSTGRES_HOST -U $POSTGRES_USER -d $POSTGRES_DB -c "SELECT 1" >/dev/null 2>&1 || echo "$(date): Database connection failed" | mail -s "Database Alert" admin@yessales.com

# 备份失败时发送告警
# 在每个备份脚本中已包含告警逻辑

# ============================================
# 日志轮转
# ============================================

# 每周日凌晨 5:00 轮转日志
0 5 * * 0 cd $BACKUP_DIR/logs && mv cron.log cron.log.$(date +\%Y\%m\%d) && touch cron.log

# 删除30天前的日志
0 5 * * 0 find $BACKUP_DIR/logs -name "*.log.*" -mtime +30 -delete

# ============================================
# 备注
# ============================================
# 1. 请根据实际环境修改路径和参数
# 2. 确保所有脚本有执行权限
# 3. 建议先在测试环境验证
# 4. 定期检查 cron 日志确保任务正常执行
# 5. 使用 crontab -l 查看当前计划任务
# 6. 使用 tail -f /var/log/cron 监控执行情况